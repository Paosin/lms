<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.octave.mapper.ClientMapper">
  <resultMap id="BaseResultMap" type="com.octave.entity.Client">
    <id column="client_id" jdbcType="INTEGER" property="clientId" />
    <id column="client_name" jdbcType="VARCHAR" property="clientName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="abstract_account" jdbcType="VARCHAR" property="abstractAccount" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="locked" jdbcType="INTEGER" property="locked" />
  </resultMap>
  <sql id="Base_Column_List">
    client_id, client_name, password, abstract_account, company, tel, linkman, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.octave.entity.ClientKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client
    where client_id = #{clientId,jdbcType=INTEGER}
      and client_name = #{clientName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.octave.entity.ClientKey">
    delete from client
    where client_id = #{clientId,jdbcType=INTEGER}
      and client_name = #{clientName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.octave.entity.Client">
    insert into client (client_id, client_name, password, 
      abstract_account, company, tel, 
      linkman, locked)
    values (#{clientId,jdbcType=INTEGER}, #{clientName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{abstractAccount,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{tel,jdbcType=CHAR}, 
      #{linkman,jdbcType=VARCHAR}, #{locked,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.octave.entity.Client">
    insert into client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        client_id,
      </if>
      <if test="clientName != null">
        client_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="abstractAccount != null">
        abstract_account,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="clientName != null">
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="abstractAccount != null">
        #{abstractAccount,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=CHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.octave.entity.Client">
    update client
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="abstractAccount != null">
        abstract_account = #{abstractAccount,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=INTEGER},
      </if>
    </set>
    where client_id = #{clientId,jdbcType=INTEGER}
      and client_name = #{clientName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.octave.entity.Client">
    update client
    set password = #{password,jdbcType=VARCHAR},
      abstract_account = #{abstractAccount,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=CHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=INTEGER}
    where client_id = #{clientId,jdbcType=INTEGER}
      and client_name = #{clientName,jdbcType=VARCHAR}
  </update>
</mapper>