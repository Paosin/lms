<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.octave.mapper.CityMapper">
  <resultMap id="BaseResultMap" type="com.octave.entity.City">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="first_letter" jdbcType="VARCHAR" property="firstLetter" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  
  <resultMap id="VoResultMap" type="com.octave.vo.CityVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="first_letter" jdbcType="VARCHAR" property="firstLetter" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <association property="parent" column="parent_id" javaType="com.octave.vo.CityVo" select="selectVoByPrimaryKey" />
  </resultMap>

  <sql id="Base_Column_List">
    id, code, name, parent_id, first_letter, level
  </sql>
    
  <select id="listByParent" resultMap="VoResultMap">
      SELECT * FROM city WHERE parent_id = #{id};
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectVoByPrimaryKey" parameterType="java.lang.Integer" resultMap="VoResultMap">
    select
    <include refid="Base_Column_List" />
    from city
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from city
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.octave.entity.City">
    insert into city (id, code, name, 
      parent_id, first_letter, level
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER}, #{firstLetter,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.octave.entity.City">
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="firstLetter != null">
        first_letter,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="firstLetter != null">
        #{firstLetter,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.octave.entity.City">
    update city
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="firstLetter != null">
        first_letter = #{firstLetter,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.octave.entity.City">
    update city
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      first_letter = #{firstLetter,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>